"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.ProjectMembershipsApi = void 0;
var _ApiClient = require("../ApiClient");
function _typeof(o) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && "function" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : typeof o; }, _typeof(o); }
function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor); } }
function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }
function _toPropertyKey(t) { var i = _toPrimitive(t, "string"); return "symbol" == _typeof(i) ? i : String(i); }
function _toPrimitive(t, r) { if ("object" != _typeof(t) || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || "default"); if ("object" != _typeof(i)) return i; throw new TypeError("@@toPrimitive must return a primitive value."); } return ("string" === r ? String : Number)(t); } /*
 * Asana
 * This is the interface for interacting with the [Asana Platform](https://developers.asana.com). Our API reference is generated from our [OpenAPI spec] (https://raw.githubusercontent.com/Asana/openapi/master/defs/asana_oas.yaml).
 *
 * OpenAPI spec version: 1.0
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 3.0.52
 *
 * Do not edit the class manually.
 *
 */
var Collection = require('../utils/collection');

/**
* ProjectMemberships service.
* @module api/ProjectMembershipsApi
* @version 3.0.1
*/
var ProjectMembershipsApi = exports.ProjectMembershipsApi = /*#__PURE__*/function () {
  /**
  * Constructs a new ProjectMembershipsApi. 
  * @alias module:api/ProjectMembershipsApi
  * @class
  * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
  * default to {@link module:ApiClient#instanc
  e} if unspecified.
  */
  function ProjectMembershipsApi(apiClient) {
    _classCallCheck(this, ProjectMembershipsApi);
    this.apiClient = apiClient || _ApiClient.ApiClient.instance;
  }

  /**
   * Get a project membership
   * Returns the complete project record for a single project membership.
   * @param {String} project_membership_gid 
   * @param {Object} opts Optional parameters
   * @param {Array.<module:model/String>} opts.opt_fields This endpoint returns a compact resource, which excludes some properties by default. To include those optional properties, set this query parameter to a comma-separated list of the properties you wish to include.
   * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data and HTTP response
   */
  _createClass(ProjectMembershipsApi, [{
    key: "getProjectMembershipWithHttpInfo",
    value: function getProjectMembershipWithHttpInfo(project_membership_gid, opts) {
      opts = opts || {};
      var postBody = null;
      // verify the required parameter 'project_membership_gid' is set
      if (project_membership_gid === undefined || project_membership_gid === null) {
        throw new Error("Missing the required parameter 'project_membership_gid' when calling getProjectMembership");
      }
      var pathParams = {
        'project_membership_gid': project_membership_gid
      };
      var queryParams = {};
      opts = opts || {};
      queryParams = opts;
      var headerParams = {};
      var formParams = {};
      var authNames = ['personalAccessToken'];
      var contentTypes = [];
      var accepts = ['application/json; charset=UTF-8'];
      var returnType = 'Blob';

      // Check if RETURN_COLLECTION is set and return a collection object if it is
      if (this.apiClient.RETURN_COLLECTION && false) {
        return Collection.fromApiClient(this.apiClient.callApi('/project_memberships/{project_membership_gid}', 'GET', pathParams, queryParams, headerParams, formParams, postBody, authNames, contentTypes, accepts, returnType), this.apiClient, {
          'path': '/project_memberships/{project_membership_gid}',
          'httpMethod': 'GET',
          'pathParams': pathParams,
          'queryParams': queryParams,
          'headerParams': headerParams,
          'formParams': formParams,
          'bodyParam': postBody,
          'authNames': authNames,
          'contentTypes': contentTypes,
          'accepts': accepts,
          'returnType': returnType
        });
      } else {
        return this.apiClient.callApi('/project_memberships/{project_membership_gid}', 'GET', pathParams, queryParams, headerParams, formParams, postBody, authNames, contentTypes, accepts, returnType);
      }
    }

    /**
     * Get a project membership
     * Returns the complete project record for a single project membership.
     * @param {<&vendorExtensions.x-jsdoc-type>} project_membership_gid 
     * @param {Object} opts Optional parameters
     * @param {Array.<module:model/String>} opts.opt_fields This endpoint returns a compact resource, which excludes some properties by default. To include those optional properties, set this query parameter to a comma-separated list of the properties you wish to include.
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:model/ProjectMembershipNormalResponseData}
     */
  }, {
    key: "getProjectMembership",
    value: function getProjectMembership(project_membership_gid, opts) {
      // Check if RETURN_COLLECTION is set and return a collection object if it is
      if (this.apiClient.RETURN_COLLECTION && false) {
        return this.getProjectMembershipWithHttpInfo(project_membership_gid, opts);
      } else {
        return this.getProjectMembershipWithHttpInfo(project_membership_gid, opts).then(function (response_and_data) {
          return response_and_data.data;
        });
      }
    }

    /**
     * Get memberships from a project
     * Returns the compact project membership records for the project.
     * @param {String} project_gid Globally unique identifier for the project.
     * @param {Object} opts Optional parameters
     * @param {String} opts.user A string identifying a user. This can either be the string \&quot;me\&quot;, an email, or the gid of a user.
     * @param {Number} opts.limit Results per page. The number of objects to return per page. The value must be between 1 and 100.
     * @param {String} opts.offset Offset token. An offset to the next page returned by the API. A pagination request will return an offset token, which can be used as an input parameter to the next request. If an offset is not passed in, the API will return the first page of results. &#x27;Note: You can only pass in an offset that was returned to you via a previously paginated request.&#x27;
     * @param {Array.<module:model/String>} opts.opt_fields This endpoint returns a compact resource, which excludes some properties by default. To include those optional properties, set this query parameter to a comma-separated list of the properties you wish to include.
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data and HTTP response
     */
  }, {
    key: "getProjectMembershipsForProjectWithHttpInfo",
    value: function getProjectMembershipsForProjectWithHttpInfo(project_gid, opts) {
      opts = opts || {};
      var postBody = null;
      // verify the required parameter 'project_gid' is set
      if (project_gid === undefined || project_gid === null) {
        throw new Error("Missing the required parameter 'project_gid' when calling getProjectMembershipsForProject");
      }
      var pathParams = {
        'project_gid': project_gid
      };
      var queryParams = {};
      opts = opts || {};
      queryParams = opts;
      var headerParams = {};
      var formParams = {};
      var authNames = ['personalAccessToken'];
      var contentTypes = [];
      var accepts = ['application/json; charset=UTF-8'];
      var returnType = 'Blob';

      // Check if RETURN_COLLECTION is set and return a collection object if it is
      if (this.apiClient.RETURN_COLLECTION && true) {
        return Collection.fromApiClient(this.apiClient.callApi('/projects/{project_gid}/project_memberships', 'GET', pathParams, queryParams, headerParams, formParams, postBody, authNames, contentTypes, accepts, returnType), this.apiClient, {
          'path': '/projects/{project_gid}/project_memberships',
          'httpMethod': 'GET',
          'pathParams': pathParams,
          'queryParams': queryParams,
          'headerParams': headerParams,
          'formParams': formParams,
          'bodyParam': postBody,
          'authNames': authNames,
          'contentTypes': contentTypes,
          'accepts': accepts,
          'returnType': returnType
        });
      } else {
        return this.apiClient.callApi('/projects/{project_gid}/project_memberships', 'GET', pathParams, queryParams, headerParams, formParams, postBody, authNames, contentTypes, accepts, returnType);
      }
    }

    /**
     * Get memberships from a project
     * Returns the compact project membership records for the project.
     * @param {<&vendorExtensions.x-jsdoc-type>} project_gid Globally unique identifier for the project.
     * @param {Object} opts Optional parameters
     * @param {String} opts.user A string identifying a user. This can either be the string \&quot;me\&quot;, an email, or the gid of a user.
     * @param {Number} opts.limit Results per page. The number of objects to return per page. The value must be between 1 and 100.
     * @param {String} opts.offset Offset token. An offset to the next page returned by the API. A pagination request will return an offset token, which can be used as an input parameter to the next request. If an offset is not passed in, the API will return the first page of results. &#x27;Note: You can only pass in an offset that was returned to you via a previously paginated request.&#x27;
     * @param {Array.<module:model/String>} opts.opt_fields This endpoint returns a compact resource, which excludes some properties by default. To include those optional properties, set this query parameter to a comma-separated list of the properties you wish to include.
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:model/ProjectMembershipCompactArray}
     */
  }, {
    key: "getProjectMembershipsForProject",
    value: function getProjectMembershipsForProject(project_gid, opts) {
      // Check if RETURN_COLLECTION is set and return a collection object if it is
      if (this.apiClient.RETURN_COLLECTION && true) {
        return this.getProjectMembershipsForProjectWithHttpInfo(project_gid, opts);
      } else {
        return this.getProjectMembershipsForProjectWithHttpInfo(project_gid, opts).then(function (response_and_data) {
          return response_and_data.data;
        });
      }
    }
  }]);
  return ProjectMembershipsApi;
}();